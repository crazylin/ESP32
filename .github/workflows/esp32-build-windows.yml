name: Build ESP32 (Windows + Cache)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # 固定使用的 ESP-IDF 版本（可按需修改，比如 v5.1.2 / v5.2.1 / v4.4.6）
  IDF_VERSION: v5.2.1
  # 将依赖固定安装在工作区的 _deps 目录，便于缓存与表达式解析
  IDF_DIR: ${{ github.workspace }}\_deps\esp-idf
  IDF_TOOLS_PATH: ${{ github.workspace }}\_deps\.espressif

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # 缓存 ESP-IDF 源码目录，减少 clone 时间（可选，但很轻量）
      - name: Cache ESP-IDF repo
        id: cache-idf
        uses: actions/cache@v4
        with:
          path: ${{ env.IDF_DIR }}
          key: ${{ runner.os }}-esp-idf-${{ env.IDF_VERSION }}
          restore-keys: |
            ${{ runner.os }}-esp-idf-

      # 缓存 ESP-IDF 工具链（编译器、Python venv、CMake/Ninja 等）
      - name: Cache ESP-IDF tools
        id: cache-tools
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.IDF_TOOLS_PATH }}
          key: ${{ runner.os }}-idf-tools-${{ env.IDF_VERSION }}
          restore-keys: |
            ${{ runner.os }}-idf-tools-

      - name: Fetch/Install ESP-IDF
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $parent = Split-Path -Path "${{ env.IDF_DIR }}" -Parent
          New-Item -ItemType Directory -Force -Path $parent | Out-Null
          if (!(Test-Path "${{ env.IDF_DIR }}")) {
            git clone --depth 1 --branch $env:IDF_VERSION https://github.com/espressif/esp-idf.git "${{ env.IDF_DIR }}"
          } else {
            cd "${{ env.IDF_DIR }}"
            git fetch --tags --depth 1 origin $env:IDF_VERSION
            git checkout $env:IDF_VERSION
          }
          cd "${{ env.IDF_DIR }}"
          ./install.ps1

      - name: Build (idf.py)
        shell: pwsh
        working-directory: .
        run: |
          $ErrorActionPreference = 'Stop'
          $env:IDF_PATH = "${{ env.IDF_DIR }}"
          $env:IDF_TOOLS_PATH = "${{ env.IDF_TOOLS_PATH }}"
          . "$env:IDF_PATH\export.ps1"
          idf.py --version
          idf.py set-target esp32
          idf.py build

      - name: Upload artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: esp32-firmware
          path: |
            build/*.bin
            build/*.elf
            build/bootloader/bootloader.bin
            build/partition_table/partition-table.bin


